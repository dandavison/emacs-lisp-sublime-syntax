%YAML 1.2
---
# http://www.sublimetext.com/docs/3/syntax.html
#
name: EmacsLisp
file_extensions:
  - el
scope: source.lisp
contexts:
  main:
    - include: comments
    - include: parens

  expressions:
    - include: comments
    - include: numbers
    - include: strings
    - include: control
    - include: operators
    - include: functions

  control:
    - match: \b(?i:always|as|block|case|cl-loop|cl-return-from|cond|condition-case|do|dolist|dotimes|do*|etypecase|if|let|loop|mapc|mapcan|mapcar|mapcon|mapl|maplist|prog1|progn|repeat|return|return-from|typecase|unless|when|while)\b
      scope: keyword.control.lisp

  functions:
    - match: \b(?i:(cl-defgeneric|cl-define-compiler-macro|cl-defmacro|cl-defmethod|cl-defstruct|cl-defsubst|cl-deftype|cl-defun|defadvice|defalias|defclass|defconst|defconst-mode-local|defcustom|defface|defgeneric|defgroup|define-child-mode|define-compiler-macro|define-compiler-macro|define-derived-mode|define-key|define-minor-mode|define-package|defmacro|defmacro*|defmethod|defsetf|defstruct|defsubst|defsubst*|deftype|defun|defun*|defvar|defvar-local|defvar-mode-local|defvaralias|defvoo|interactive|provide|require))\b
      scope: meta.function.lisp
      captures:
        1: storage.type.function-type.lisp
        2: entity.name.function.lisp

  operators:
    - match: '\/\=|\>\=|\<\=|\=|\>|\<'
      scope: keyword.operator.comparison.lisp
    - match: '\+|\-|\*|\/'
      scope: keyword.operator.arithmetic.lisp
    - match: \b(?i:and|or|not)\b
      scope: keyword.operator.logical.lisp
    - match: \b(?i:logand|logior|logxor|lognot|ash|lsh)\b
      scope: keyword.operator.bitwise.lisp

  parens:
    - match: '\('
      scope: punctuation.definition.group.begin.lisp
      push:
        - meta_scope: meta.group.lisp
        - match: '\)'
          scope: punctuation.definition.group.end.lisp
          pop: true
        - include: expressions
        - include: parens
    - match: '\)'
      scope: invalid.illegal.stray-bracket-end.lisp

  numbers:
    - match: '\b((0(x|X)\h*)|(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)(?i:l|ul|u|f|ll|ull)?\b'
      scope: constant.numeric.lisp

  strings:
    - match: '"'
      scope: punctuation.definition.string.begin.lisp
      push:
        - meta_scope: string.quoted.double.lisp
        - match: '"'
          scope: punctuation.definition.string.end.lisp
          pop: true
        - match: \\.
          scope: constant.character.escape.lisp

  comments:
    - match: (;).*$\n?
      scope: comment.line.semicolon.lisp
      captures:
        1: punctuation.definition.comment.lisp
